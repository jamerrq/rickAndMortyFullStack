{"ast":null,"code":"function validate(inputs) {\n  const emailRegex = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n  const passwordRegex = /\\w/;\n  let errors = {\n    email: \"\",\n    password: \"\"\n  };\n  Object.keys(inputs).forEach(input => {\n    let value = inputs[input];\n    switch (input) {\n      case 'email':\n        !value.length && (errors.email = \"No puede ser vacío.\");\n        !value.length > 35 && (errors.email = \"Usuario muy largo.\");\n        const msgError = \"Debe ser un correo electrónico.\";\n        !emailRegex.test(value) && (errors.email = msgError);\n        break;\n      case 'password':\n        !(value.length >= 6 && value.length <= 10) && (errors.password = \"La contraseña debe tener \" + \"entre 6 y 10 dígitos.\");\n        !passwordRegex.test(value) && (errors.password = \"La contraseña debe tener al menos un dígito.\");\n        break;\n      default:\n        break;\n    }\n  });\n  return errors;\n}\nexport default validate;","map":{"version":3,"names":["validate","inputs","emailRegex","passwordRegex","errors","email","password","Object","keys","forEach","input","value","length","msgError","test"],"sources":["/home/jamerrq/GitHub/reactProjects/rickAndMorty/src/validation.js"],"sourcesContent":["function validate(inputs) {\n\n    const emailRegex = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n    const passwordRegex = /\\w/;\n    let errors = {\n        email: \"\",\n        password: \"\",\n    }\n\n    Object.keys(inputs).forEach(input => {\n        let value = inputs[input];\n        switch (input) {\n            case 'email':\n                !value.length && (errors.email = \"No puede ser vacío.\");\n                !value.length > 35 && (errors.email = \"Usuario muy largo.\");\n                const msgError = \"Debe ser un correo electrónico.\";\n                !emailRegex.test(value) && (errors.email = msgError);\n                break;\n            case 'password':\n                !(value.length >= 6 && value.length <= 10) &&\n                    (errors.password = \"La contraseña debe tener \" +\n                        \"entre 6 y 10 dígitos.\");\n                !passwordRegex.test(value) && (errors.password =\n                    \"La contraseña debe tener al menos un dígito.\");\n                break;\n            default:\n                break;\n        }\n    });\n\n    return errors;\n\n}\n\n\nexport default validate;\n"],"mappings":"AAAA,SAASA,QAAQA,CAACC,MAAM,EAAE;EAEtB,MAAMC,UAAU,GAAG,6CAA6C;EAChE,MAAMC,aAAa,GAAG,IAAI;EAC1B,IAAIC,MAAM,GAAG;IACTC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE;EACd,CAAC;EAEDC,MAAM,CAACC,IAAI,CAACP,MAAM,CAAC,CAACQ,OAAO,CAACC,KAAK,IAAI;IACjC,IAAIC,KAAK,GAAGV,MAAM,CAACS,KAAK,CAAC;IACzB,QAAQA,KAAK;MACT,KAAK,OAAO;QACR,CAACC,KAAK,CAACC,MAAM,KAAKR,MAAM,CAACC,KAAK,GAAG,qBAAqB,CAAC;QACvD,CAACM,KAAK,CAACC,MAAM,GAAG,EAAE,KAAKR,MAAM,CAACC,KAAK,GAAG,oBAAoB,CAAC;QAC3D,MAAMQ,QAAQ,GAAG,iCAAiC;QAClD,CAACX,UAAU,CAACY,IAAI,CAACH,KAAK,CAAC,KAAKP,MAAM,CAACC,KAAK,GAAGQ,QAAQ,CAAC;QACpD;MACJ,KAAK,UAAU;QACX,EAAEF,KAAK,CAACC,MAAM,IAAI,CAAC,IAAID,KAAK,CAACC,MAAM,IAAI,EAAE,CAAC,KACrCR,MAAM,CAACE,QAAQ,GAAG,2BAA2B,GAC1C,uBAAuB,CAAC;QAChC,CAACH,aAAa,CAACW,IAAI,CAACH,KAAK,CAAC,KAAKP,MAAM,CAACE,QAAQ,GAC1C,8CAA8C,CAAC;QACnD;MACJ;QACI;IAAM;EAElB,CAAC,CAAC;EAEF,OAAOF,MAAM;AAEjB;AAGA,eAAeJ,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}